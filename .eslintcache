[{"/home/irunka/projects/Technical-task-for-Yalantis-React/src/index.js":"1","/home/irunka/projects/Technical-task-for-Yalantis-React/src/reportWebVitals.js":"2","/home/irunka/projects/Technical-task-for-Yalantis-React/src/App.js":"3","/home/irunka/projects/Technical-task-for-Yalantis-React/src/components/Users.js":"4","/home/irunka/projects/Technical-task-for-Yalantis-React/src/services/UserServise.js":"5","/home/irunka/projects/Technical-task-for-Yalantis-React/src/helpers/configAxios.js":"6","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/index.js":"7","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/App.js":"8","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/reportWebVitals.js":"9","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/components/Users.js":"10","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/services/UserServise.js":"11","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/helpers/configAxios.js":"12"},{"size":500,"mtime":1606999214310,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1606999214310,"results":"15","hashOfConfig":"14"},{"size":597,"mtime":1607083079478,"results":"16","hashOfConfig":"14"},{"size":3554,"mtime":1607336515332,"results":"17","hashOfConfig":"14"},{"size":496,"mtime":1607082257285,"results":"18","hashOfConfig":"14"},{"size":206,"mtime":1607081586053,"results":"19","hashOfConfig":"14"},{"size":500,"mtime":1607336999785,"results":"20","hashOfConfig":"21"},{"size":597,"mtime":1607336999785,"results":"22","hashOfConfig":"21"},{"size":362,"mtime":1607336999785,"results":"23","hashOfConfig":"21"},{"size":4056,"mtime":1607345696129,"results":"24","hashOfConfig":"21"},{"size":496,"mtime":1607336999805,"results":"25","hashOfConfig":"21"},{"size":206,"mtime":1607336999785,"results":"26","hashOfConfig":"21"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"eo28xr",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"1288vdn",{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"42"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/irunka/projects/Technical-task-for-Yalantis-React/src/index.js",[],"/home/irunka/projects/Technical-task-for-Yalantis-React/src/reportWebVitals.js",[],"/home/irunka/projects/Technical-task-for-Yalantis-React/src/App.js",["55","56"],"/home/irunka/projects/Technical-task-for-Yalantis-React/src/components/Users.js",["57","58","59","60"],"/home/irunka/projects/Technical-task-for-Yalantis-React/src/services/UserServise.js",[],["61","62"],"/home/irunka/projects/Technical-task-for-Yalantis-React/src/helpers/configAxios.js",[],"/home/irunka/projects/Technical-task-for-Yalantis-React1/src/index.js",[],["63","64"],"/home/irunka/projects/Technical-task-for-Yalantis-React1/src/App.js",["65","66"],"import React, { Component, lazy, Suspense } from 'react';\nimport './App.css';\nimport {Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport Users from \"./components/Users\";\n\nconst history = createBrowserHistory()\n\nclass App extends Component {\n  render() {\n    return (\n        <Router history={history}>\n          <Switch>\n            <Route exact path=\"/employees\" name=\"Працівники\" component={Users} />\n            <Redirect from='/' to='/employees'/>\n          </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/reportWebVitals.js",[],"/home/irunka/projects/Technical-task-for-Yalantis-React1/src/components/Users.js",["67","68","69","70","71"],"import React, { Component, lazy, Suspense } from 'react';\nimport {userService} from \"../services/UserServise\";\nimport './user.css'\n\n\nclass Users extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            checkedItems: []\n        }\n    }\n\n    componentDidMount() {\n        userService.getList()\n            .then(result => {\n                result.sort((emp1, emp2) => emp1.lastName > emp2.lastName ? 1 : -1);\n                this.setState({\n                    items: result,\n                    checkedItems: JSON.parse(localStorage.getItem(\"checked\"))\n                })\n            });\n    }\n    render() {\n        const {items, checkedItems} = this.state;\n\n        const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n        let objOfChecked = {};\n        let addObj = checkedItems ? checkedItems.map(item => {\n            let date = new Date( item.dob );\n            let month = date.toLocaleString('default', { month: 'long' });\n            if(objOfChecked.hasOwnProperty(month)) {\n                objOfChecked[month].push(item);\n            } else {\n                objOfChecked[month] = [item];\n            }\n        }) :  {};\n        return (\n            <div className={'records'}>\n                <div className={'allRecord'}>\n                    <h5>Employees</h5>\n                    <ul>\n                        {alphabet.map(arr => <div key={arr} className={'box'}>\n                            {arr}\n                            <ul>\n                                {items.filter(item => item.lastName[0] === arr)\n                                    .map(item => <li key={item.id} className={'userblock'}>\n                                        {item.lastName + \" \" + item.firstName}\n                                        <input type={'checkbox'} checked={checkedItems ? checkedItems.find(it => it.id === item.id) : false} onChange={(e) => {\n                                            //localStorage.setItem(\"checked\", \"[]\")\n                                            let obj = JSON.parse(localStorage.getItem(\"checked\")) || [];\n                                            if (e.target.checked) {\n                                                obj.push(item);\n                                            } else {\n                                                let index;\n                                                obj.find((it, i) => {\n                                                    if(it.id === item.id)\n                                                        index = i;\n                                                })\n                                                obj.splice(index, 1)\n                                            }\n                                            localStorage.setItem(\"checked\", JSON.stringify(obj))\n                                            this.setState({checkedItems: obj})\n                                        }}/>\n                                    </li>)}\n                            </ul>\n                        </div>)}\n\n                    </ul>\n                </div>\n                <div className={'checkedRecord'}>\n                    <h5>Employees birsday</h5>\n                    <hr/>\n                    {checkedItems ? Object.keys(objOfChecked).map(item => {\n                        return <div>\n                            <p>{item}</p>\n                            {objOfChecked[item].map(it =>  {\n                                let date = new Date( it.dob );\n                                let month = date.toLocaleString('default', { month: 'long' });\n                                return <li>{it.lastName + \" \" + it.firstName + \" - \" + date.getDate() + \" \" + month + \", \" + date.getFullYear() + \" year\"}</li>\n                            })}\n                        </div>\n                    }) : <div></div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Users;","/home/irunka/projects/Technical-task-for-Yalantis-React1/src/services/UserServise.js",[],"/home/irunka/projects/Technical-task-for-Yalantis-React1/src/helpers/configAxios.js",[],{"ruleId":"72","severity":1,"message":"73","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":42},{"ruleId":"72","severity":1,"message":"77","line":30,"column":15,"nodeType":"74","messageId":"75","endLine":30,"endColumn":23},{"ruleId":"78","severity":1,"message":"79","line":49,"column":66,"nodeType":"80","messageId":"81","endLine":49,"endColumn":68},{"ruleId":"82","replacedBy":"83"},{"ruleId":"84","replacedBy":"85"},{"ruleId":"82","replacedBy":"86"},{"ruleId":"84","replacedBy":"87"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":42},{"ruleId":"72","severity":1,"message":"73","line":1,"column":28,"nodeType":"74","messageId":"75","endLine":1,"endColumn":32},{"ruleId":"72","severity":1,"message":"76","line":1,"column":34,"nodeType":"74","messageId":"75","endLine":1,"endColumn":42},{"ruleId":"72","severity":1,"message":"88","line":31,"column":13,"nodeType":"74","messageId":"75","endLine":31,"endColumn":19},{"ruleId":"78","severity":1,"message":"89","line":31,"column":59,"nodeType":"80","messageId":"81","endLine":31,"endColumn":61},{"ruleId":"78","severity":1,"message":"79","line":58,"column":66,"nodeType":"80","messageId":"81","endLine":58,"endColumn":68},"no-unused-vars","'lazy' is defined but never used.","Identifier","unusedVar","'Suspense' is defined but never used.","'monthArr' is assigned a value but never used.","array-callback-return","Array.prototype.find() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["90"],"no-negated-in-lhs",["91"],["90"],["91"],"'addObj' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","no-global-assign","no-unsafe-negation"]
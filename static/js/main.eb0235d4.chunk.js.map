{"version":3,"sources":["helpers/configAxios.js","services/UserServise.js","components/UserList.js","components/CheckedList.js","components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","baseURL","timeout","userService","getList","get","then","res","status","data","catch","error","console","log","UserList","props","this","items","checkedItems","changeChecked","map","arr","className","filter","item","lastName","firstName","type","checked","find","it","id","onChange","e","Component","CheckedList","objOfChecked","month","Date","dob","toLocaleString","hasOwnProperty","push","length","Object","keys","getObjOfChecked","date","getDate","getFullYear","Users","state","bind","result","sort","emp1","emp2","setState","JSON","parse","localStorage","getItem","index","obj","target","i","splice","setItem","stringify","history","createBrowserHistory","App","exact","path","name","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eb0235d4.chunk.js","sourcesContent":["import * as axios from \"axios\";\r\n\r\nexport const API = axios.create({\r\n    //baseURL: 'http://localhost:8083/content',\r\n    baseURL: 'https://yalantis-react-school-api.yalantis.com/api',\r\n    timeout: 1000000\r\n});","import {API} from \"../helpers/configAxios\";\r\n\r\nexport const userService = {\r\n    getList,\r\n    //getItem\r\n};\r\n\r\nfunction getList() {\r\n    return API.get('/task0/users')\r\n        .then(res => {\r\n            if(res && res.status === 200){\r\n                if(res.data){\r\n                    return res.data;\r\n                }else\r\n                    return null;\r\n            }\r\n            return null;\r\n        })\r\n        .catch(error => {\r\n            console.log(error);\r\n            return error;\r\n        });\r\n}","import React, { Component, lazy, Suspense } from 'react';\r\nimport './user.css'\r\n\r\nclass UserList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const {items, checkedItems, changeChecked} = this.props;\r\n\r\n        const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n        return (\r\n                    <ul>\r\n                        {alphabet.map(arr => <div key={arr} className={'box'}>\r\n                            {arr}\r\n                            <ul>\r\n                                {items.filter(item => item.lastName[0] === arr)\r\n                                    .map(item => <li key={item.id} className={'userblock'}>\r\n                                        {item.lastName + \" \" + item.firstName}\r\n                                        <input type={'checkbox'} checked={checkedItems ? checkedItems.find(it => it.id === item.id) : false} onChange={(e) => {\r\n                                            //localStorage.setItem(\"checked\", \"[]\")\r\n                                            changeChecked(e, item);\r\n                                        }}/>\r\n                                    </li>)}\r\n                            </ul>\r\n                        </div>)}\r\n\r\n                    </ul>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserList;","import React, { Component, lazy, Suspense } from 'react';\r\n\r\nclass CheckedList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    getObjOfChecked() {\r\n        const {checkedItems} = this.props;\r\n        let objOfChecked = {};\r\n        let addObj = checkedItems ? checkedItems.map(item => {\r\n            let date = new Date( item.dob );\r\n            let month = date.toLocaleString('default', { month: 'long' });\r\n            if(objOfChecked.hasOwnProperty(month)) {\r\n                objOfChecked[month].push(item);\r\n            } else {\r\n                objOfChecked[month] = [item];\r\n            }\r\n        }) :  {};\r\n        return objOfChecked;\r\n    }\r\n\r\n    render() {\r\n        const {checkedItems} = this.props;\r\n        return (\r\n                    checkedItems && checkedItems.length ? Object.keys(this.getObjOfChecked()).map(item => {\r\n                        return <div>\r\n                            <p>{item}</p>\r\n                            {this.getObjOfChecked()[item].map(it =>  {\r\n                                let date = new Date( it.dob );\r\n                                let month = date.toLocaleString('default', { month: 'long' });\r\n                                return <li>{it.lastName + \" \" + it.firstName + \" - \" + date.getDate() + \" \" + month + \", \" + date.getFullYear() + \" year\"}</li>\r\n                            })}\r\n                        </div>\r\n                    }) : <div>No selected employees</div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CheckedList;","import React, { Component, lazy, Suspense } from 'react';\r\nimport {userService} from \"../services/UserServise\";\r\nimport './user.css'\r\nimport UserList from \"./UserList\";\r\nimport CheckedList from \"./CheckedList\";\r\n\r\n\r\nclass Users extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            items: [],\r\n            checkedItems: []\r\n        }\r\n        this.changeChecked = this.changeChecked.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        userService.getList()\r\n            .then(result => {\r\n                result.sort((emp1, emp2) => emp1.lastName > emp2.lastName ? 1 : -1);\r\n                this.setState({\r\n                    items: result,\r\n                    checkedItems: JSON.parse(localStorage.getItem(\"checked\"))\r\n                })\r\n            });\r\n    }\r\n\r\n    changeChecked(e, item) {\r\n        let obj = JSON.parse(localStorage.getItem(\"checked\")) || [];\r\n        if (e.target.checked) {\r\n            obj.push(item);\r\n        } else {\r\n            let index;\r\n            obj.find((it, i) => {\r\n                if(it.id === item.id)\r\n                    index = i;\r\n            })\r\n            obj.splice(index, 1)\r\n        }\r\n        localStorage.setItem(\"checked\", JSON.stringify(obj))\r\n        this.setState({checkedItems: obj})\r\n    }\r\n    render() {\r\n        const {items, checkedItems} = this.state;\r\n\r\n        return (\r\n            <div className={'records'}>\r\n                <div className={'allRecord'}>\r\n                    <h5>Employees</h5>\r\n                    <UserList items={items} checkedItems={checkedItems} changeChecked={this.changeChecked}></UserList>\r\n                </div>\r\n                <div className={'checkedRecord'}>\r\n                    <h5>Employees birsday</h5>\r\n                    <hr/>\r\n                    <CheckedList checkedItems={checkedItems}></CheckedList>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Users;","import React, { Component, lazy, Suspense } from 'react';\r\nimport './App.css';\r\nimport {Router, Switch, Route, Redirect} from \"react-router-dom\";\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nimport Users from \"./components/Users\";\r\n\r\nconst history = createBrowserHistory()\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Router history={history}>\r\n          <Switch>\r\n            <Route exact path=\"/employees\" name=\"Працівники\" component={Users} />\r\n            <Redirect from='/' to='/employees'/>\r\n          </Switch>\r\n        </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}
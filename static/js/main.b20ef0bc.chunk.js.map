{"version":3,"sources":["helpers/configAxios.js","services/UserServise.js","components/Users.js","App.js","reportWebVitals.js","index.js"],"names":["API","axios","baseURL","timeout","userService","getList","get","then","res","status","data","catch","error","console","log","Users","props","state","items","checkedItems","result","sort","emp1","emp2","lastName","setState","JSON","parse","localStorage","getItem","this","objOfChecked","map","item","month","Date","dob","toLocaleString","hasOwnProperty","push","className","arr","filter","firstName","type","checked","find","it","id","onChange","e","index","obj","target","i","splice","setItem","stringify","length","Object","keys","date","getDate","getFullYear","Component","history","createBrowserHistory","App","exact","path","name","component","from","to","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b20ef0bc.chunk.js","sourcesContent":["import * as axios from \"axios\";\n\nexport const API = axios.create({\n    //baseURL: 'http://localhost:8083/content',\n    baseURL: 'https://yalantis-react-school-api.yalantis.com/api',\n    timeout: 1000000\n});","import {API} from \"../helpers/configAxios\";\n\nexport const userService = {\n    getList,\n    //getItem\n};\n\nfunction getList() {\n    return API.get('/task0/users')\n        .then(res => {\n            if(res && res.status === 200){\n                if(res.data){\n                    return res.data;\n                }else\n                    return null;\n            }\n            return null;\n        })\n        .catch(error => {\n            console.log(error);\n            return error;\n        });\n}","import React, { Component, lazy, Suspense } from 'react';\nimport {userService} from \"../services/UserServise\";\nimport './user.css'\n\n\nclass Users extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            items: [],\n            checkedItems: []\n        }\n    }\n\n    componentDidMount() {\n        userService.getList()\n            .then(result => {\n                result.sort((emp1, emp2) => emp1.lastName > emp2.lastName ? 1 : -1);\n                this.setState({\n                    items: result,\n                    checkedItems: JSON.parse(localStorage.getItem(\"checked\"))\n                })\n            });\n    }\n    render() {\n        const {items, checkedItems} = this.state;\n\n        const alphabet = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\n        let objOfChecked = {};\n        let addObj = checkedItems ? checkedItems.map(item => {\n            let date = new Date( item.dob );\n            let month = date.toLocaleString('default', { month: 'long' });\n            if(objOfChecked.hasOwnProperty(month)) {\n                objOfChecked[month].push(item);\n            } else {\n                objOfChecked[month] = [item];\n            }\n        }) :  {};\n        return (\n            <div className={'records'}>\n                <div className={'allRecord'}>\n                    <h5>Employees</h5>\n                    <ul>\n                        {alphabet.map(arr => <div key={arr} className={'box'}>\n                            {arr}\n                            <ul>\n                                {items.filter(item => item.lastName[0] === arr)\n                                    .map(item => <li key={item.id} className={'userblock'}>\n                                        {item.lastName + \" \" + item.firstName}\n                                        <input type={'checkbox'} checked={checkedItems ? checkedItems.find(it => it.id === item.id) : false} onChange={(e) => {\n                                            //localStorage.setItem(\"checked\", \"[]\")\n                                            let obj = JSON.parse(localStorage.getItem(\"checked\")) || [];\n                                            if (e.target.checked) {\n                                                obj.push(item);\n                                            } else {\n                                                let index;\n                                                obj.find((it, i) => {\n                                                    if(it.id === item.id)\n                                                        index = i;\n                                                })\n                                                obj.splice(index, 1)\n                                            }\n                                            localStorage.setItem(\"checked\", JSON.stringify(obj))\n                                            this.setState({checkedItems: obj})\n                                        }}/>\n                                    </li>)}\n                            </ul>\n                        </div>)}\n\n                    </ul>\n                </div>\n                <div className={'checkedRecord'}>\n                    <h5>Employees birsday</h5>\n                    <hr/>\n                    {checkedItems && checkedItems.length ? Object.keys(objOfChecked).map(item => {\n                        return <div>\n                            <p>{item}</p>\n                            {objOfChecked[item].map(it =>  {\n                                let date = new Date( it.dob );\n                                let month = date.toLocaleString('default', { month: 'long' });\n                                return <li>{it.lastName + \" \" + it.firstName + \" - \" + date.getDate() + \" \" + month + \", \" + date.getFullYear() + \" year\"}</li>\n                            })}\n                        </div>\n                    }) : <div>No selected employees</div>}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Users;","import React, { Component, lazy, Suspense } from 'react';\nimport './App.css';\nimport {Router, Switch, Route, Redirect} from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\n\nimport Users from \"./components/Users\";\n\nconst history = createBrowserHistory()\n\nclass App extends Component {\n  render() {\n    return (\n        <Router history={history}>\n          <Switch>\n            <Route exact path=\"/employees\" name=\"Працівники\" component={Users} />\n            <Redirect from='/' to='/employees'/>\n          </Switch>\n        </Router>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}